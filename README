KONECT-Analysis
===============

This is the network analysis component of the KONECT project (Koblenz
Network Collection) by Jérôme Kunegis at the University of Namur.

http://konect.cc/

This is used to run analyses of KONECT networks in parallel, based on
using the Stu tool (see 'INSTALL' for installation instructions).  The
code here is executed constantly by the KONECT project on our own
computation servers.  If you want to run it yourself, see the file
'INSTALL'.  The analysis code uses a mix of Matlab, Octave, Julia, C99,
Perl 5, and the shell: 

* Matlab (*.m): Most code is written in Matlab.  Matlab has excellent
  plotting functionality.  The drawback is that it's proprietary
  software, and as a result it is quite unportable and unpredictable.
  In general, new versions of Matlab break compatibility with something.
  Some parts of Matlab just show its age, like the '...' line
  continuations.  Matlab has a very large corpus of third party
  libraries.  The builtin functions such as matrix decompositions are
  also very heavily optimized.  It's slow when code does not make use of
  vectorization.  We don't use Matlab for new code; instead GNU Octave
  is used as a direct replacement, or other programming languages.
* GNU Octave (*.m): A clone of Matlab.  It is source code compatible to
  Matlab in theory, but in practice the devil is in the details: It is
  slower, it does not support very large matrices (only 32 bit indexes),
  and plotting is not as beautiful as in Matlab.
* Julia (*.jl):  This is the new and shiny new programming language that
  could in theory replace Matlab and Octave.  We have only used it for a
  few analyses.  The main drawbacks that we stumbled upon are:  (1)
  Plotting is based on Python, so slow and only documented for Python.
  (2) Some functions are weird, like max()/maximum().  Otherwise it has
  many improvements, in particular when compared to all the weird quirks
  of Matlab. 
* Perl 5 (executable files):  This is the perfect language when
  processing text.  No questions asked.   
* C99 (*.c): The most memory efficient of all.  It is also the fastest
  when implementing simple algorithms.  The code tends to be very long,
  so we only use it for a few high-importance but algorithmically simple
  analyses: triangle count, diameter, etc.  We have a complex system of
  compile-time type choosing, which may get transferred to C++
  eventually.

See the file INSTALL for installation and usage instructions. 

For questions, bug reports and other comments, write to Jérôme Kunegis
<jerome.kunegis@unamur.be>.

If you like and want to support the KONECT project, please consider making a
donation at the following address:

https://www.paypal.com/donate/?hosted_button_id=Q9JY2FB3AFHR6

== Requirements ==

Disclaimer: KONECT-Analysis is academic, experimental, and mostly
executed by its authors.  As a result, it is _not_ optimized for easy
installation or compatibility -- while we do take care to be compatible
with various systems, we don't test KONECT-Analysis on other systems
that those we use ourselves (which run Ubuntu).  Also, we like to
experiment with new programming languages from time to time, and as a
result this project is quite a mix of languages.  We warned you this is
a geek project.

The good news is:  You don't need _all_ dependencies for all use cases.
Stu is needed everywhere, but beyond that it depends what you are
doing.  You go ahead and run things, and you'll notice if something is
missing. 

* Stu:  install from https://github.com/kunegis/stu
* A C99 compiler (for triangle counts, diameters, and a few more simple
  statistics and measures)  
* sed -E (this is not [yet] POSIX, but GNU Sed and BSD Sed have it)
* python-rdflib / python-rdflib-tools (for RDF generation only, deprecated)
* Matlab:  This is proprietary, so may be hard to get (we're very slowly deprecating it)
* GNU Octave (we use it occasionally, but not for new code -- it does
  not support large networks) 
* Perl 5
* Julia (experimental, see lib/JULIA)
* Matlab-BGL (Boost Graph Library for Matlab) -- see file lib/README
* matplotlib (used from within Julia)

== License ==

Written by Jérôme Kunegis, Daniel Dünker and Jesús Cabello González. 

KONECT Analysis is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

KONECT Analysis is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

The full text of the GPLv3 is found in the file COPYING.

== Third-party software ==

This software contains third-party software included in the directory
lib/.  See there for the respective licenses and copyright information.
